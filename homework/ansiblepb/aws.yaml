- name: create aws instance
  hosts: localhost
  user: nesterenko
  tasks:
    - name: create key pair
      ec2_key:
        name: exercise13
        region: us-east-2
      register: ec2_key_exercise13
    - name: Save key
      copy: content="{{ ec2_key_exercise13.key.private_key }}" dest="~/.ssh/id_rsa" mode=0600
      when: ec2_key_exercise13.changed
    - name: create security group
      ec2_group:
        name: nginx-sec
        description: Secure group 
        region: us-east-2
        rules:
          - proto: tcp
            ports:
              - 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            ports:
              - 22
            cidr_ip: 0.0.0.0/0
    - name: create aws instance
      ec2:
        key_name: exercise13
        region: us-east-2
        group: nginx-sec
        instance_type: t2.micro
        image: ami-00399ec92321828f5
        wait: yes
        count: 1
      register: ec2
    - name: get ip
      debug:
        var: ec2.instances[0].public_ip
    - name: update inventory
      add_host:
        name: "{{ ec2.instances[0].public_ip }}"
        groups: exercise13
    - name: Wait for SSH to come up
      wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=320 state=started
      loop: "{{ ec2.instances }}"

    - name: Add nodes to known hosts
      shell: ssh-keyscan -H {{ item.public_ip }} >> ~/.ssh/known_hosts
      loop: "{{ ec2.instances }}"

- name: deploy nginx
  hosts: exercise13
  remote_user: ubuntu
  become: yes
  become_user: root
  tasks:
    - name: ensure nginx is installed
      apt:
        name: nginx
        state: present
        update_cache: yes
    - name: modify hello page
      copy:
        src: index.html
        dest: /var/www/html/index.html
      notify:
        - restart nginx
  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted
